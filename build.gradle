plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}

group = 'qa_guru_hw12'
version = '1.0-SNAPSHOT'

def allureVersion = "2.25.0",
    restAssuredVersion = "5.4.0"



allure {
    report {
        version.set(allureVersion)
    }
    adapter {  //отвечает за появление папки build/allure-results
        aspectjVersion.set('1.9.21.1')
        aspectjWeaver.set(true)  //обработка аннотанции @Step
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)  //версия интеграции фреймворка и allure

            }
        }
    }
}


compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}


dependencies {
    testImplementation(
            "org.junit.jupiter:junit-jupiter:5.10.1",
            "org.aeonbits.owner:owner:1.0.2",
            "com.codeborne:selenide:7.0.4",
            "io.qameta.allure:allure-selenide:2.25.0",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion"
    )
    testRuntimeOnly('org.slf4j:slf4j-simple:2.0.7')

}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task owner_tests(type: Test) {
    useJUnitPlatform{
        includeTags("regress")
    }
}